name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]

jobs:
  preview:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatchling==1.27.0 hatch==1.14.0
      - name: Inject full dynamic version
        run: python .hooks/sync_version.py --dev

      - name: Set VERSION env
        run: echo "VERSION=$(grep -E '^version\\s*=\\s*\".*\"' pyproject.toml | awk -F '\"' '{print $2}')" >> $GITHUB_ENV
      - name: Clean previous builds
        run: rm -rf dist/ build/ *.egg-info
      - name: Build package
        run: hatch build
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/
      - name: Get PR number
        id: prnum
        run: echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
      - name: Comment with install instructions
        uses: actions/github-script@v7
        env:
          VERSION: ${{ env.VERSION }}
          PR_NUMBER: ${{ env.pr_number }}
        with:
          script: |
            const prNumber = process.env.PR_NUMBER;
            const version = process.env.VERSION;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const comment = `You can test this PR package with:\n\n\`\`\`sh\npip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple light-s3-client==${version}\n\`\`\``;
            const comments = await github.rest.issues.listComments({ owner, repo, issue_number: prNumber });
            const botComment = comments.data.find(comment => comment.user.type === 'Bot' && comment.body.includes('You can test this PR package'));
            if (botComment) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: botComment.id, body: comment });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number: prNumber, body: comment });
            }
      - name: Verify package is available
        id: verify_package
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          for i in {1..30}; do
            if pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple light-s3-client==${VERSION}; then
              echo "Package ${VERSION} is now available and installable on TestPyPI"
              pip uninstall -y light-s3-client
              echo "success=true" >> $GITHUB_OUTPUT
              exit 0
            fi
            echo "Attempt $i: Package not yet installable, waiting 20s... (${i}/30)"
            sleep 20
          done
          echo "success=false" >> $GITHUB_OUTPUT
          exit 1
